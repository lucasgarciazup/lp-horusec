{"version":3,"file":"component---src-pages-about-tsx-4eb2003cf91e9c369c83.js","mappings":"4QAiDA,EA1C6B,WAAO,IAAD,EACzBA,GAAMC,EAAAA,EAAAA,kBAAND,EAEAE,GAAUC,EAAAA,EAAAA,gBAAe,cAAzBD,MAeR,OACE,gBAAC,KAAD,CAASE,MAAI,GACX,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,KACE,gBAAC,KAAD,CAAcC,UAAU,cACrBR,EAAE,uBAEL,gBAAC,KAAD,CAAgBQ,UAAU,cACvBR,EAAE,2BAGP,gBAACO,EAAA,EAAD,KACE,gBAAC,IAAD,CACEE,MAAOP,MAAAA,GAAF,UAAEA,EAAOQ,uBAAT,aAAE,EAAwBD,MAC/BD,UAAU,yBCSxB,EA1C2B,WACzB,IAAQR,GAAMC,EAAAA,EAAAA,kBAAND,EAEAE,GAAUC,EAAAA,EAAAA,gBAAe,cAAzBD,MAeR,OACE,gBAAC,KAAD,KACE,gBAACG,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,KACE,gBAAC,IAAD,CACEE,MAAOP,EAAMQ,gBAAgBD,MAC7BD,UAAU,qBAGd,gBAACD,EAAA,EAAD,KACE,gBAAC,KAAD,CAAcC,UAAU,cACrBR,EAAE,qBAEL,gBAAC,KAAD,CAAgBQ,UAAU,cACvBR,EAAE,6BCQjB,EAzC6B,WAAO,IAAD,EACzBA,GAAMC,EAAAA,EAAAA,kBAAND,EAEAE,GAAUC,EAAAA,EAAAA,gBAAe,aAAzBD,MAeR,OACE,gBAAC,KAAD,CAASE,MAAI,GACX,gBAACC,EAAA,EAAD,KACE,gBAAC,KAAD,KAAeL,EAAE,uBACjB,gBAACM,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,KACE,gBAAC,KAAD,CACEC,UAAU,aACVG,wBAAyB,CAAEC,OAAQZ,EAAE,6BAGzC,gBAACO,EAAA,EAAD,KACE,gBAAC,IAAD,CACEE,MAAOP,MAAAA,GAAF,UAAEA,EAAOQ,uBAAT,aAAE,EAAwBD,MAC/BD,UAAU,yBCSxB,EAzCyB,WAAO,IAAD,EACrBR,GAAMC,EAAAA,EAAAA,kBAAND,EAEAE,GAAUC,EAAAA,EAAAA,gBAAe,cAAzBD,MAeR,OACE,gBAAC,KAAD,KACE,gBAACG,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAKC,UAAU,6CACb,gBAAC,KAAD,KAAeR,EAAE,kBACjB,gBAAC,KAAD,CACEQ,UAAU,aACVG,wBAAyB,CAAEC,OAAQZ,EAAE,wBAGzC,gBAACO,EAAA,EAAD,KACE,gBAAC,IAAD,CACEE,MAAOP,MAAAA,GAAF,UAAEA,EAAOQ,uBAAT,aAAE,EAAwBD,MAC/BD,UAAU,yB,UCjBxB,EAjBuB,WACrB,OACE,gBAAC,KAAD,KACE,gBAACH,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAKE,UAAU,0BACb,gBAACD,EAAA,EAAD,CAAKC,UAAU,SACb,gBAAC,KAAD,CAAkBK,WAAS,KAE7B,gBAACN,EAAA,EAAD,CAAKC,UAAU,SACb,gBAAC,KAAD,W,UCmCZ,EA1CkC,WAChC,IAAQR,GAAMC,EAAAA,EAAAA,kBAAND,EAEFc,EAAQ,CACZ,CACEC,KAAMf,EAAE,gCACRgB,MAAOhB,EAAE,iCACTiB,QAASjB,EAAE,oCAEb,CACEe,KAAMf,EAAE,gCACRgB,MAAOhB,EAAE,iCACTiB,QAASjB,EAAE,oCAEb,CACEe,KAAMf,EAAE,gCACRgB,MAAOhB,EAAE,iCACTiB,QAASjB,EAAE,qCAIf,OACE,gBAAC,KAAD,KACE,gBAACK,EAAA,EAAD,KACE,gBAAC,KAAD,KAAeL,EAAE,iCACjB,gBAAC,KAAD,CAAgBQ,UAAU,eACvBR,EAAE,8BAEL,gBAACM,EAAA,EAAD,CAAKE,UAAU,+BACZM,EAAMI,KAAI,SAAAC,GAAI,OACb,gBAACZ,EAAA,EAAD,CAAKa,IAAKD,EAAKH,MAAOR,UAAU,eAC9B,uBAAKa,KAAKC,EAAAA,EAAAA,YAAWH,EAAKJ,MAAOQ,OAAQ,GAAIC,MAAM,OAAOhB,UAAU,SACpE,sBAAIA,UAAU,gBAAgBW,EAAKH,OACnC,yBAAIG,EAAKF,iBC3BR,SAASQ,IACtB,IAAQzB,GAAMC,EAAAA,EAAAA,kBAAND,EACR,OACE,gBAAC,IAAD,KACE,gBAAC,KAAD,KACE,gBAACK,EAAA,EAAD,KACE,0BAAKL,EAAE,kBAGX,gBAAC,EAAD,MACA,gBAAC,EAAD,MACA,gBAAC,EAAD,MACA,gBAAC,EAAD,MACA,gBAAC,EAAD,MACA,gBAAC,EAAD","sources":["webpack://gatsby-starter-hello-world/./src/sections/about/howItWorks/index.tsx","webpack://gatsby-starter-hello-world/./src/sections/about/whatIsIt/index.tsx","webpack://gatsby-starter-hello-world/./src/sections/about/whereToUse/index.tsx","webpack://gatsby-starter-hello-world/./src/sections/about/whyUse/index.tsx","webpack://gatsby-starter-hello-world/./src/sections/about/info/index.tsx","webpack://gatsby-starter-hello-world/./src/sections/about/typesOfAnalysis/index.tsx","webpack://gatsby-starter-hello-world/./src/pages/about.tsx"],"sourcesContent":["import React from \"react\"\nimport { Col, Container, Row } from \"react-bootstrap\"\nimport { useTranslation } from \"gatsby-plugin-react-i18next\"\nimport { Section, CaptionSection, TitleSection } from \"../../../styles/layouts\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst HowItWorks: React.FC = () => {\n  const { t } = useTranslation()\n\n  const { image } = useStaticQuery(graphql`\n    query {\n      image: file(name: { eq: \"how_it_works\" }) {\n        name\n        publicURL\n        childImageSharp {\n          fixed(height: 600) {\n            aspectRatio\n            ...GatsbyImageSharpFixed_tracedSVG\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Section dark>\n      <Container>\n        <Row>\n          <Col>\n            <TitleSection className=\"text-start\">\n              {t(\"how_it_works_title\")}\n            </TitleSection>\n            <CaptionSection className=\"text-start\">\n              {t(\"how_it_works_subtitle\")}\n            </CaptionSection>\n          </Col>\n          <Col>\n            <Img\n              fixed={image?.childImageSharp?.fixed}\n              className=\"mx-auto d-block\"\n            />\n          </Col>\n        </Row>\n      </Container>\n    </Section>\n  )\n}\n\nexport default HowItWorks\n","import React from \"react\"\nimport { Col, Container, Row } from \"react-bootstrap\"\nimport { useTranslation } from \"gatsby-plugin-react-i18next\"\nimport { Section, CaptionSection, TitleSection } from \"../../../styles/layouts\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst WhatIsIt: React.FC = () => {\n  const { t } = useTranslation()\n\n  const { image } = useStaticQuery(graphql`\n    query {\n      image: file(name: { eq: \"what_is_it\" }) {\n        name\n        publicURL\n        childImageSharp {\n          fixed(height: 600) {\n            aspectRatio\n            ...GatsbyImageSharpFixed_tracedSVG\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Section>\n      <Container>\n        <Row>\n          <Col>\n            <Img\n              fixed={image.childImageSharp.fixed}\n              className=\"mx-auto d-block\"\n            />\n          </Col>\n          <Col>\n            <TitleSection className=\"text-start\">\n              {t(\"what_is_it_title\")}\n            </TitleSection>\n            <CaptionSection className=\"text-start\">\n              {t(\"what_is_it_subtitle\")}\n            </CaptionSection>\n          </Col>\n        </Row>\n      </Container>\n    </Section>\n  )\n}\n\nexport default WhatIsIt\n","import React from \"react\"\nimport { Col, Container, Row } from \"react-bootstrap\"\nimport { useTranslation } from \"gatsby-plugin-react-i18next\"\nimport { Section, BodySection, TitleSection } from \"../../../styles/layouts\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst WhereToUse: React.FC = () => {\n  const { t } = useTranslation()\n\n  const { image } = useStaticQuery(graphql`\n    query {\n      image: file(name: { eq: \"where_to_use\" }) {\n        name\n        publicURL\n        childImageSharp {\n          fixed(height: 600) {\n            aspectRatio\n            ...GatsbyImageSharpFixed_tracedSVG\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Section dark>\n      <Container>\n        <TitleSection>{t(\"where_to_use_title\")}</TitleSection>\n        <Row>\n          <Col>\n            <BodySection\n              className=\"text-start\"\n              dangerouslySetInnerHTML={{ __html: t(\"where_to_use_subtitle\") }}\n            />\n          </Col>\n          <Col>\n            <Img\n              fixed={image?.childImageSharp?.fixed}\n              className=\"mx-auto d-block\"\n            />\n          </Col>\n        </Row>\n      </Container>\n    </Section>\n  )\n}\n\nexport default WhereToUse\n","import React from \"react\"\nimport { Col, Container, Row } from \"react-bootstrap\"\nimport { useTranslation } from \"gatsby-plugin-react-i18next\"\nimport { Section, BodySection, TitleSection } from \"../../../styles/layouts\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst WhyUse: React.FC = () => {\n  const { t } = useTranslation()\n\n  const { image } = useStaticQuery(graphql`\n    query {\n      image: file(name: { eq: \"why_use\" }) {\n        name\n        publicURL\n        childImageSharp {\n          fixed(height: 400) {\n            aspectRatio\n            ...GatsbyImageSharpFixed_tracedSVG\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Section>\n      <Container>\n        <Row>\n          <Col className=\"d-flex flex-column justify-content-center\">\n            <TitleSection>{t(\"why_use_title\")}</TitleSection>\n            <BodySection\n              className=\"text-start\"\n              dangerouslySetInnerHTML={{ __html: t(\"why_use_subtitle\") }}\n            />\n          </Col>\n          <Col>\n            <Img\n              fixed={image?.childImageSharp?.fixed}\n              className=\"mx-auto d-block\"\n            />\n          </Col>\n        </Row>\n      </Container>\n    </Section>\n  )\n}\n\nexport default WhyUse\n","import React from \"react\"\nimport { Row, Col, Container } from \"react-bootstrap\"\nimport { DocumentationButton, ContributeButton } from \"../../../styles/buttons\"\nimport { Section } from \"../../../styles/layouts\"\n\nconst Info: React.FC = () => {\n  return (\n    <Section>\n      <Container>\n        <Row className=\"justify-content-center\">\n          <Col className=\"col-3\">\n            <ContributeButton highlight />\n          </Col>\n          <Col className=\"col-3\">\n            <DocumentationButton />\n          </Col>\n        </Row>\n      </Container>\n    </Section>\n  )\n}\n\nexport default Info\n","import React from \"react\"\nimport { Col, Container, Row } from \"react-bootstrap\"\nimport { useTranslation } from \"gatsby-plugin-react-i18next\"\n\nimport { CaptionSection, Section, TitleSection } from \"../../../styles/layouts\"\nimport { withPrefix } from 'gatsby'\n\nconst TypesOfAnalysis: React.FC = () => {\n  const { t } = useTranslation()\n\n  const cards = [\n    {\n      icon: t(\"type_of_analysis_card_1_icon\"),\n      title: t(\"type_of_analysis_card_1_title\"),\n      caption: t(\"type_of_analysis_card_1_caption\"),\n    },\n    {\n      icon: t(\"type_of_analysis_card_2_icon\"),\n      title: t(\"type_of_analysis_card_2_title\"),\n      caption: t(\"type_of_analysis_card_2_caption\"),\n    },\n    {\n      icon: t(\"type_of_analysis_card_3_icon\"),\n      title: t(\"type_of_analysis_card_3_title\"),\n      caption: t(\"type_of_analysis_card_3_caption\"),\n    },\n  ]\n\n  return (\n    <Section>\n      <Container>\n        <TitleSection>{t(\"type_of_analysis_about_title\")}</TitleSection>\n        <CaptionSection className=\"text-center\">\n          {t(\"type_of_analysis_subtitle\")}\n        </CaptionSection>\n        <Row className=\"mt-5 justify-content-center\">\n          {cards.map(item => (\n            <Col key={item.title} className=\"text-center\">\n              <img src={withPrefix(item.icon)} height={70} width=\"auto\" className=\"mb-3\" />\n              <h2 className=\"mx-auto mb-3\">{item.title}</h2>\n              <p>{item.caption}</p>\n            </Col>\n          ))}\n        </Row>\n      </Container>\n    </Section>\n  )\n}\n\nexport default TypesOfAnalysis\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Container } from \"react-bootstrap\"\nimport HowItWorks from \"../sections/about/howItWorks\"\nimport WhatIsIt from \"../sections/about/whatIsIt\"\nimport WhereToUse from \"../sections/about/whereToUse\"\nimport WhyUse from \"../sections/about/whyUse\"\nimport Info from \"../sections/about/info\"\nimport { TitlePage } from \"../styles/layouts\"\nimport { Template } from \"../templates/default\"\nimport { useTranslation } from \"gatsby-plugin-react-i18next\"\nimport TypesOfAnalysis from \"../sections/about/typesOfAnalysis\"\n\nexport default function About() {\n  const { t } = useTranslation()\n  return (\n    <Template>\n      <TitlePage>\n        <Container>\n          <h1>{t(\"about_title\")}</h1>\n        </Container>\n      </TitlePage>\n      <WhatIsIt />\n      <HowItWorks />\n      <TypesOfAnalysis />\n      <WhereToUse />\n      <WhyUse />\n      <Info />\n    </Template>\n  )\n}\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`\n"],"names":["t","useTranslation","image","useStaticQuery","dark","Container","Row","Col","className","fixed","childImageSharp","dangerouslySetInnerHTML","__html","highlight","cards","icon","title","caption","map","item","key","src","withPrefix","height","width","About"],"sourceRoot":""}